{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.css","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shared/order.ts","webpack:///./app/shop/cart.component.html","webpack:///./app/shop/cart.component.ts","webpack:///./app/shop/productList.component.css","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-9\\\">\\r\\n    <h3>{{ title }}</h3>\\r\\n    <product-list></product-list>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <div class=\\\"well well-sm\\\">\\r\\n      <the-cart></the-cart>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Dutch Treat';\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClientJsonpModule } from \"@angular/common/http\";\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from \"./shop/productList.component\";\nimport { DataService } from './shared/dataService';\r\nimport { Cart } from \"./shop/cart.component\";\r\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductList,\n    Cart\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","﻿import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from \"./product\";\r\nimport { Order, OrderItem } from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public order: Order = new Order();\r\n\r\n  public products: Product[] = [];\r\n\r\n  loadProducts(): Observable<boolean> {\r\n    return this.http.get(\"/api/products\")\r\n      .pipe(map((data: any[]) => {\r\n        this.products = data;\r\n        return true;\r\n      }));\r\n  }\r\n\r\n  public addToOrder(product: Product) {\r\n    let item: OrderItem = this.order.items.find(i => i.productId == product.id);\r\n\r\n    if (item) {\r\n      item.quantity++;\r\n    } else {\r\n      item.productId = product.id;\r\n      item.productArtist = product.artist;\r\n      item.productArtId = product.artId;\r\n      item.productCategory = product.category;\r\n      item.productSize = product.size;\r\n      item.productTitle = product.title;\r\n      item.unitPrice = product.price;\r\n      item.quantity = 1;\r\n\r\n      this.order.items.push(item);\r\n    }\r\n  }\r\n}","﻿import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n  orderId: number;\r\n  orderDate: Date = new Date();\r\n  orderNumber: string;\r\n  items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n  //get subtotal(): number {\r\n  //  return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n  //};\r\n}\r\n\r\nexport class OrderItem {\r\n  id: number;\r\n  quantity: number;\r\n  unitPrice: number;\r\n  productId: number;\r\n  productCategory: string;\r\n  productSize: string;\r\n  productTitle: string;\r\n  productArtist: string;\r\n  productArtId: string;\r\n}","module.exports = \"<h3>Shopping Cart</h3>\\r\\n<div>#/Items: {{ data.order.items.length }}</div>\\r\\n<div>Subtotal: {{ data.order.subtotal | currency:\\\"USD\\\":true  }}</div>\\r\\n<table class=\\\"table table-condensed table-hover\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <td>Product</td>\\r\\n      <td>Quantity</td>\\r\\n      <td>Price</td>\\r\\n      <td>Total</td>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n      <td>{{ o.productCategory }}</td>\\r\\n      <td>{{ o.quantity }}</td>\\r\\n      <td>{{ o.unitPrice | currency:\\\"USD\\\":true }}</td>\\r\\n      <td>{{ (o.unitPrice * o.quantity) | currency:\\\"USD\\\":true }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\n\r\n@Component({\r\n  selector: \"the-cart\",\r\n  templateUrl: \"cart.component.html\",\r\n  styleUrls: []\r\n})\r\nexport class Cart {\r\n  constructor(private data: DataService) { }\r\n}","module.exports = \".product-info img {\\r\\n  max-width: 100px;\\r\\n  float: left;\\r\\n  margin: 0 2px;\\r\\n  border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name {\\r\\n  font-size: medium;\\r\\n  font-weight: bold;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n  <div class=\\\"product-info col-md-4 well well-sm\\\" *ngFor=\\\"let p of products\\\">\\r\\n    <img src=\\\"/img/{{ p.artId }}.jpg\\\" class=\\\"img-responsive\\\" alt=\\\"{{ p.title }}\\\" />\\r\\n    <div class=\\\"product-name\\\">{{ p.category }} - {{ p.size }}</div>\\r\\n    <div><strong>Price:</strong> {{ p.price | currency:\\\"USD\\\":true }}</div>\\r\\n    <div><strong>Artist:</strong> {{ p.artist }}</div>\\r\\n    <div><strong>Title:</strong> {{ p.title }}</div>\\r\\n    <div><strong>Description:</strong> {{ p.artDescription }}</div>\\r\\n    <button id=\\\"buyButton\\\" class=\\\"btn btn-success btn-sm pull-right\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n  </div>\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n  selector: \"product-list\",\r\n  templateUrl: \"productList.component.html\",\r\n  styleUrls: [\"productList.component.css\"]\r\n})\r\n\r\nexport class ProductList implements OnInit {\r\n  constructor(private data: DataService) {\r\n    this.products = data.products;\r\n  }\r\n\r\n  public products = [];\r\n\r\n  ngOnInit(): void {\r\n    this.data.loadProducts()\r\n      .subscribe(success => {\r\n        if (success) {\r\n          this.products = this.data.products;\r\n        }\r\n      })\r\n  }\r\n\r\n  addProduct(product: Product) {\r\n    this.data.addToOrder(product);\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}